//Drive libary
#include <stdio.h>;
#include "E101.h";
// max values = 18
bool debug = true;
int motor_left = 5;
int motor_right = 1;
int motor_camera = -1;
double zero_speed = 48;

void __attribute__ ((constructor)) initLibrary(void) {
 //
 // Function that is called when the library is loaded
 //
    printf("Library is initialized\n"); 
    gSummand = 0;
}
void __attribute__ ((destructor)) cleanUpLibrary(void) {
 //
 // Function that is called when the library is »closed«.
 //
    printf("Library is exited\n"); 
}

void  turn ( double direction ,bool stationary , double scale){
	if (stationary){
		park();
		set_motors(motor_left, direction)
		set_motors(motor_right, direction)
	}

	else{ /// this will need testing for how the motors work
		set_motors(motor_left,(direction > 0 )? -direction : -(direction/scale);
		set_motors(motor_right,(direction > 0 )? direction : (direction/scale);
	}
	hardware_exchange();
	sleep1(5);
}



void drive ( double speed) {

	if (((speed > 0)? speed : 0-speed) < 15){
		set_motors(motor_left,zero_speed-speed);
		set_motors(motor_right,zero_speed+speed);
		hardware_exchange();
		sleep1(5);
	}	

	else{
		printf("ERROR \n speed enterd is to big \n");
	}

}

void park () {
	drive(0);
}

void lost(){
	drive(-5);
}

/* if way to tell angle then need to update
 * angle to got 90 or equivalent and 0 or equivalent
*/



void look_up(int time){
	set_motors(motor_camera,10);
	//hardware_exchange()
	sleep1(time);//wait 5 seconds
	set_motors(motor_camera,0);
	sleep1(5);
}

void look_down(int time){
	set_motors(motor_camera,-10);
	hardware_exchange()
	sleep1(time);//wait 5 seconds
	set_motors(motor_camera,0);
	hardware_exchange()
	sleep1(5);
}
